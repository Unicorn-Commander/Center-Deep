version: '3.8'

services:
  # Main Center Deep Flask Application
  center-deep:
    build: .
    container_name: center-deep-app
    restart: unless-stopped
    ports:
      - "0.0.0.0:8888:8888"  # Center Deep on port 8888
    volumes:
      - ./instance:/app/instance
      - ./static:/app/static:ro
      - ./templates:/app/templates:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - center-deep-network
    environment:
      - FLASK_ENV=production
      - REDIS_HOST=${REDIS_HOST:-redis}  # Use existing Redis or internal
      - USE_EXTERNAL_REDIS=${USE_EXTERNAL_REDIS:-false}  # Set to true to use existing Redis
      - EXTERNAL_REDIS_HOST=${EXTERNAL_REDIS_HOST:-localhost}  # External Redis host
      - EXTERNAL_REDIS_PORT=${EXTERNAL_REDIS_PORT:-6379}  # External Redis port
      - SEARXNG_URL=http://searxng:8080
      - TOOL_SEARCH_PORT=13050
      - TOOL_DEEP_SEARCH_PORT=13051
      - TOOL_REPORT_PORT=13052
      - TOOL_ACADEMIC_PORT=13053
    depends_on:
      - searxng
    env_file:
      - .env

  # SearXNG search backend
  searxng:
    image: searxng/searxng:latest
    container_name: center-deep-searxng
    restart: unless-stopped
    ports:
      - "0.0.0.0:8889:8080"  # Also expose searxng on 8889 for debugging
    volumes:
      - ./searxng:/etc/searxng:rw
    networks:
      - center-deep-network
    environment:
      - BIND_ADDRESS=0.0.0.0:8080
      - INSTANCE_NAME=Center Deep
      - SEARXNG_REDIS_URL=${SEARXNG_REDIS_URL:-redis://redis:6379/0}

  # Optional Redis service (only if not using external)
  redis:
    image: redis:7-alpine
    container_name: center-deep-redis
    restart: unless-stopped
    profiles:
      - with-redis  # Only start if profile is activated
    command: redis-server --maxmemory 2gb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "0.0.0.0:6380:6379"  # Use 6380 to avoid conflict with existing Redis
    networks:
      - center-deep-network

  # Tool servers on high ports (13050-13053)
  tool-search:
    build: ./toolserver/search
    container_name: center-deep-tool-search
    restart: unless-stopped
    profiles:
      - tools  # Only start if tools profile is activated
    ports:
      - "0.0.0.0:13050:8001"
    networks:
      - center-deep-network
    environment:
      - SEARXNG_URL=http://searxng:8080
      - CENTER_DEEP_URL=http://center-deep:8890
      - LLM_API_BASE=${SEARCH_LLM_API_BASE:-}
      - LLM_API_KEY=${SEARCH_LLM_API_KEY:-}
      - LLM_MODEL=${SEARCH_LLM_MODEL:-gpt-3.5-turbo}
    env_file:
      - .env

  tool-deep-search:
    build: ./toolserver/deep-search
    container_name: center-deep-tool-deep-search
    restart: unless-stopped
    profiles:
      - tools
    ports:
      - "0.0.0.0:13051:8002"
    networks:
      - center-deep-network
    environment:
      - SEARXNG_URL=http://searxng:8080
      - CENTER_DEEP_URL=http://center-deep:8890
      - LLM_API_BASE=${DEEP_SEARCH_LLM_API_BASE:-}
      - LLM_API_KEY=${DEEP_SEARCH_LLM_API_KEY:-}
      - LLM_MODEL=${DEEP_SEARCH_LLM_MODEL:-gpt-4}
    env_file:
      - .env

  tool-report:
    build: ./toolserver/report
    container_name: center-deep-tool-report
    restart: unless-stopped
    profiles:
      - tools
    ports:
      - "0.0.0.0:13052:8003"
    networks:
      - center-deep-network
    environment:
      - SEARXNG_URL=http://searxng:8080
      - CENTER_DEEP_URL=http://center-deep:8890
      - LLM_API_BASE=${REPORT_LLM_API_BASE:-}
      - LLM_API_KEY=${REPORT_LLM_API_KEY:-}
      - LLM_MODEL=${REPORT_LLM_MODEL:-gpt-4}
    env_file:
      - .env

  tool-academic:
    build: ./toolserver/academic
    container_name: center-deep-tool-academic
    restart: unless-stopped
    profiles:
      - tools
    ports:
      - "0.0.0.0:13053:8004"
    networks:
      - center-deep-network
    environment:
      - SEARXNG_URL=http://searxng:8080
      - CENTER_DEEP_URL=http://center-deep:8890
      - LLM_API_BASE=${ACADEMIC_LLM_API_BASE:-}
      - LLM_API_KEY=${ACADEMIC_LLM_API_KEY:-}
      - LLM_MODEL=${ACADEMIC_LLM_MODEL:-gpt-4}
    env_file:
      - .env

networks:
  center-deep-network:
    driver: bridge

volumes:
  redis_data: